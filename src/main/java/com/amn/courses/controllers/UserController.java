package com.amn.courses.controllers;

import com.amn.courses.dto.UserRepository;
import com.amn.courses.models.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping(path = "/user")
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestBody User user) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        for (User u : userRepository.findAll()) {
            if(u.getUsername().equals(user.getUsername())){
                ResponseEntity.status(HttpStatus.BAD_REQUEST);
                return "No double usernames";
            }
        }

        userRepository.save(user);
        return "Saved";
    }

    @GetMapping(path="")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @DeleteMapping(path="/{id}")
    public @ResponseBody String deleteUser(@PathVariable(value="id") Integer id) {
        userRepository.deleteById(id);
        return "Deleted";
    }

}
